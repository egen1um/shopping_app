{"version":3,"sources":["components/products-view.js","components/orders-view.js","shopping-app-client.js","index.js"],"names":["ProductViewInProducts","props","className","name","description","price","onClick","handleClick","id","NewProductView","state","onFormChange","bind","onFormSubmit","event","preventDefault","a","client","createProduct","error","onProductCreated","target","this","setState","value","onSubmit","type","defaultValue","onChange","React","Component","ProductsView","products","onDeleteClick","deleteProduct","refreshProductList","display","productViews","map","product","ORDER_STATUS","ProductViewInOrders","onAddToOrderClick","LoadOrderView","orderId","onLoadOrderClick","CurrentOrderView","onDeleteProductFromOrderClick","onPlaceOrderClick","deleteProductFromOrder","refreshCurrentOrder","order","placeOrder","totalPrice","discount","calculatedPrice","status","OrdersView","currentOrder","productId","createOrder","result","addProductToOrder","getOrderById","res","ShoppingAppClient","host","port","onError","response","console","log","method","endpoint","json","fetchParams","headers","body","JSON","stringify","url","fetch","text","parse","sendRequest","Content","displayPage","displayErrorMsg","shoppingAppClient","getProducts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.97cb47da.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction ProductViewInProducts(props) {\r\n    return (\r\n        <div className=\"product-view\">\r\n            <div className=\"name\">{props.name}</div>\r\n            <div className=\"description\">{props.description}</div>\r\n            <div>{props.price}</div>\r\n            <div>\r\n                <button onClick={() => props.handleClick(props.id)}>Delete</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nclass NewProductView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: \"dummyName\",\r\n            description: \"dummyDescription\",\r\n            price: 16.20\r\n        };\r\n\r\n        this.onFormChange = this.onFormChange.bind(this);\r\n        this.onFormSubmit = this.onFormSubmit.bind(this);\r\n    }\r\n\r\n    onFormSubmit(event) {\r\n        event.preventDefault();\r\n        (async () => {\r\n            const res = await this.props.client.createProduct(this.state.name, this.state.description, this.state.price);\r\n            if (!res.error)\r\n                this.props.onProductCreated();\r\n        })();\r\n    }\r\n\r\n    onFormChange(event) {\r\n        const target = event.target;\r\n        this.setState({\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"new-product-view\">\r\n                <h3>Create new product:</h3>\r\n                <form onSubmit={this.onFormSubmit}>\r\n                    <input name=\"name\" type=\"text\" defaultValue={this.state.name} onChange={this.onFormChange}/>\r\n                    <textarea name=\"description\" defaultValue={this.state.description} onChange={this.onFormChange}/>\r\n                    <input name=\"price\" type=\"text\" defaultValue={this.state.price} onChange={this.onFormChange}/>\r\n                    <input type=\"submit\" value=\"Create\"/>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass ProductsView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            products: props.products\r\n        };\r\n        this.onDeleteClick = this.onDeleteClick.bind(this);\r\n    }\r\n\r\n    onDeleteClick(id) {\r\n        (async () => {\r\n            await this.props.client.deleteProduct(id);\r\n            this.props.refreshProductList();\r\n        })();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.display)\r\n            return null;\r\n\r\n        const productViews = this.props.products.map(product =>\r\n            <ProductViewInProducts\r\n                key={product.id}\r\n                id={product.id}\r\n                name={product.name}\r\n                description={product.description}\r\n                price={product.price}\r\n                handleClick={this.onDeleteClick}\r\n            />\r\n        );\r\n\r\n        return (\r\n            <div>\r\n                <NewProductView client={this.props.client} onProductCreated={this.props.refreshProductList}/>\r\n                <div className=\"content\">\r\n                    {productViews}\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default ProductsView;\r\n","import React from \"react\";\r\n\r\nconst ORDER_STATUS = [\r\n    \"BEING_CREATED\",\r\n    \"PLACED\"\r\n]\r\n\r\nfunction ProductViewInOrders(props) {\r\n    return (\r\n        <div className=\"product-view\">\r\n            <div className=\"name\">{props.name}</div>\r\n            <div className=\"description\">{props.description}</div>\r\n            <div>{props.price}</div>\r\n            <div className=\"controls\">\r\n                <button onClick={() => props.onAddToOrderClick(props.id)}>Add to order</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nclass LoadOrderView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            orderId: \"Order ID\"\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange(event) {\r\n        this.setState({orderId: event.target.value});\r\n    }\r\n\r\n    onSubmit(event) {\r\n        event.preventDefault();\r\n        this.props.onLoadOrderClick(this.state.orderId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"new-product-view\">\r\n                <h3>Load order:</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <input type=\"text\" defaultValue={this.state.name} onChange={this.onChange}/>\r\n                    <input type=\"submit\" value=\"Load\"/>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass CurrentOrderView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onDeleteProductFromOrderClick = this.onDeleteProductFromOrderClick.bind(this);\r\n        this.onPlaceOrderClick = this.onPlaceOrderClick.bind(this);\r\n    }\r\n\r\n    onDeleteProductFromOrderClick(id) {\r\n        (async () => {\r\n            const response = await this.props.client.deleteProductFromOrder(id);\r\n            if (!response.error)\r\n                this.props.refreshCurrentOrder(this.props.order.id);\r\n        })();\r\n    }\r\n\r\n    onPlaceOrderClick() {\r\n        (async () => {\r\n            const response = await this.props.client.placeOrder(this.props.order.id);\r\n            if (!response.error)\r\n                this.props.refreshCurrentOrder(this.props.order.id);\r\n        })();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.order)\r\n            return null;\r\n\r\n        const products = this.props.order.products.map(product =>\r\n            <li key={product.id} className=\"order-item\">\r\n                <div>{product.name}</div>\r\n                <div>{product.price}</div>\r\n                <button onClick={() => this.onDeleteProductFromOrderClick(product.id)}>X</button>\r\n            </li>\r\n        );\r\n\r\n        return (\r\n            <div className=\"new-product-view\">\r\n                <h3>Current order:</h3>\r\n                <div>{`Order # ${this.props.order.id}`}</div>\r\n                <ul>\r\n                    {products}\r\n                </ul>\r\n                <div>{`Total price: ${this.props.order.price.totalPrice}`}</div>\r\n                <div>{`Discount: ${this.props.order.price.discount}`}</div>\r\n                <div>{`Final price: ${this.props.order.price.calculatedPrice}`}</div>\r\n                <div>{`Status: ${ORDER_STATUS[this.props.order.status]}`}</div>\r\n                <div><button onClick={this.onPlaceOrderClick}>Place</button></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass OrdersView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentOrder: null\r\n        };\r\n\r\n        this.onAddToOrderClick = this.onAddToOrderClick.bind(this);\r\n        this.onLoadOrderClick = this.onLoadOrderClick.bind(this);\r\n        this.refreshCurrentOrder = this.refreshCurrentOrder.bind(this);\r\n    }\r\n\r\n    onAddToOrderClick(productId) {\r\n        (async () => {\r\n            let orderId;\r\n            if (!this.state.currentOrder) {\r\n                const result = await this.props.client.createOrder();\r\n                orderId = result.orderId;\r\n            } else\r\n                orderId = this.state.currentOrder.id;\r\n\r\n            await this.props.client.addProductToOrder(productId, orderId);\r\n            this.refreshCurrentOrder(orderId);\r\n        })();\r\n    }\r\n\r\n    onLoadOrderClick(orderId) {\r\n        this.refreshCurrentOrder(orderId);\r\n    }\r\n\r\n    refreshCurrentOrder(orderId) {\r\n        (async () => {\r\n            const res = await this.props.client.getOrderById(orderId);\r\n            this.setState({currentOrder: res.order});\r\n        })();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.display)\r\n            return null;\r\n\r\n        const productViews = this.props.products.map(product =>\r\n            <ProductViewInOrders\r\n                key={product.id}\r\n                id={product.id}\r\n                name={product.name}\r\n                description={product.description}\r\n                price={product.price}\r\n                onAddToOrderClick={this.onAddToOrderClick}\r\n            />\r\n        );\r\n\r\n        return (\r\n            <div>\r\n                <LoadOrderView\r\n                    onLoadOrderClick={this.onLoadOrderClick}\r\n                />\r\n                <CurrentOrderView\r\n                    order={this.state.currentOrder}\r\n                    refreshCurrentOrder={this.refreshCurrentOrder}\r\n                    client={this.props.client}\r\n                />\r\n                <div className=\"content\">\r\n                    {productViews}\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default OrdersView;\r\n","class ShoppingAppClient {\r\n\r\n    constructor(host, port, onError = response => console.log(response)) {\r\n        this.host = host;\r\n        this.port = port;\r\n        this.onError = onError\r\n    }\r\n\r\n    async sendRequest(method, endpoint, json) {\r\n        const fetchParams = {\r\n            method: method,\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        if (json != null)\r\n            fetchParams.body = JSON.stringify(json);\r\n\r\n        // let url = `${this.host}:${this.port}${endpoint}`;\r\n        const url = endpoint;\r\n\r\n        let result = await fetch(url, fetchParams);\r\n\r\n        result = await result.text();\r\n\r\n        if (result)\r\n            result = JSON.parse(result);\r\n\r\n        this.onError(result.error ? result.error : '');\r\n\r\n        return result;\r\n    }\r\n\r\n    async createProduct(name, description, price) {\r\n        return await this.sendRequest(\"post\", \"/product\", {\r\n            name: name,\r\n            description: description,\r\n            price: price\r\n        });\r\n    }\r\n\r\n    async deleteProduct(id) {\r\n        return await this.sendRequest(\"delete\", `/product/${id}`, null);\r\n    }\r\n\r\n    async createOrder() {\r\n        return await this.sendRequest(\"post\", \"/order\", null);\r\n    }\r\n\r\n    async getProducts() {\r\n        return await this.sendRequest(\"get\", \"/products\", null);\r\n    }\r\n\r\n    async getOrders() {\r\n        return await this.sendRequest(\"get\", \"/products\", null);\r\n    }\r\n\r\n    async addProductToOrder(productId, orderId) {\r\n        return await this.sendRequest(\"put\", `/order/${orderId}/${productId}`, null);\r\n    }\r\n\r\n    async getOrderById(id) {\r\n        return await this.sendRequest(\"get\", `/order/${id}`, null);\r\n    }\r\n\r\n    async deleteProductFromOrder(id) {\r\n        return await this.sendRequest(\"delete\", `/order/product/${id}`, null);\r\n    }\r\n\r\n    async placeOrder(id) {\r\n        return await this.sendRequest(\"put\", `/order/${id}/status/1`, null);\r\n    }\r\n}\r\n\r\nexport default ShoppingAppClient;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport ProductsView from './components/products-view';\r\nimport OrdersView from './components/orders-view';\r\n\r\nimport ShoppingAppClient from \"./shopping-app-client\";\r\n\r\nclass Content extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            displayPage: \"OrdersView\",\r\n            products: [],\r\n            error: null\r\n        };\r\n\r\n        this.refreshProductList = this.refreshProductList.bind(this);\r\n        this.displayErrorMsg = this.displayErrorMsg.bind(this);\r\n\r\n        this.shoppingAppClient = new ShoppingAppClient(\"localhost\", \"80\", this.displayErrorMsg);\r\n\r\n        (async () => {\r\n            const res = await this.shoppingAppClient.getProducts();\r\n            this.setState({products: res.products});\r\n        })();\r\n    }\r\n\r\n    refreshProductList() {\r\n        console.log(\"refreshProductList\");\r\n        (async () => {\r\n            const res = await this.shoppingAppClient.getProducts();\r\n            this.setState({products: res.products});\r\n        })();\r\n    }\r\n\r\n    displayErrorMsg(error) {\r\n        this.setState({error: error});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"menu\">\r\n                    <div className=\"error-msg\">{this.state.error}</div>\r\n                    <button onClick={() => this.setState({displayPage: \"ProductsView\"})}>ProductsView</button>\r\n                    <button onClick={() => this.setState({displayPage: \"OrdersView\"})}>OrdersView</button>\r\n                </div>\r\n\r\n                <ProductsView\r\n                    products={this.state.products}\r\n                    display={this.state.displayPage === \"ProductsView\"}\r\n                    refreshProductList={this.refreshProductList}\r\n                    client={this.shoppingAppClient}\r\n                />\r\n                <OrdersView\r\n                    products={this.state.products}\r\n                    display={this.state.displayPage === \"OrdersView\"}\r\n                    client={this.shoppingAppClient}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n//\r\n// (async () => {\r\n//     const res = await this.shoppingAppClient.getProducts();\r\n//     ReactDOM.render(\r\n//         <Content products={res.products}/>,\r\n//         document.getElementById('root')\r\n//     );\r\n// })();\r\n\r\nReactDOM.render(\r\n    <Content/>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}